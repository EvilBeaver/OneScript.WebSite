Перем мТокенВерсии;
Перем мВарианты;
Перем мНесуществующаяВерсия;

Процедура ПриСозданииОбъекта(Знач Токен)
	мТокенВерсии = Токен;
	мНесуществующаяВерсия = Ложь;
КонецПроцедуры

Функция ТокенВерсии() Экспорт
	Возврат мТокенВерсии;
КонецФункции

// Получает таблицу вариантов дистрибутива
// Возвращаемое значение:
//  Наименование - Строка
//  Варианты - ТаблицаЗначений
//    - Идентификатор: Строка
//    - Представление: Строка
//    - Ссылка - относительный путь файла дистрибутива
//    - ДатаФайла - дата создания файла
//
Функция ПолучитьСостав() Экспорт
	Если мВарианты = Неопределено Тогда
		ЗаполнитьДистрибутивы();
	КонецЕсли;

	Возврат мВарианты;
КонецФункции

Функция Существует() Экспорт
	ПолучитьСостав();
	Возврат мНесуществующаяВерсия = Ложь;
КонецФункции

Функция НайтиВариантСборки(Идентификатор, Разрядность) Экспорт
	Найденное = мВарианты.НайтиСтроки(Новый Структура("Идентификатор, Архитектура", Идентификатор, Разрядность));
	Если Найденное.Количество() Тогда
		Возврат Найденное[0];
	Иначе
		Найденное = мВарианты.НайтиСтроки(
			Новый Структура("Идентификатор, Архитектура", Идентификатор, Архитектуры.Универсальная));
		Если Найденное.Количество() Тогда
			Возврат Найденное[0];
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Процедура ЗаполнитьДистрибутивы()
	
	КорневойКаталог = УправлениеКонтентом.ПолучитьКаталогСборок();
	КаталогВерсии = ОбъединитьПути(КорневойКаталог, мТокенВерсии);
	Каталог = Новый Файл(КаталогВерсии);
	
	Если Не Каталог.Существует() или Не Каталог.ЭтоКаталог() или Не СтрНачинаетсяС(Каталог.ПолноеИмя, КорневойКаталог) Тогда

		мНесуществующаяВерсия = Истина;
		мВарианты = ТаблицаФайлов();
		Возврат;

	КонецЕсли;

	Манифест = УправлениеКонтентом.ПолучитьМанифест();
	мВарианты = ТаблицаФайлов();

	// по манифесту найти целевые файлы
	Для Каждого ВариантСборки Из Манифест.ПолучитьДистрибутивы() Цикл
		
		НайденныеФайлы = ВариантСборки.ПолучитьФайлы(Каталог.ПолноеИмя);
		Если Не НайденныеФайлы.Количество() Тогда
			Продолжить;
		КонецЕсли;

		Для Каждого НайденныйФайл Из НайденныеФайлы Цикл
			
			Файл = НайденныйФайл.Файл;
			
			СтрокаДистрибутива = мВарианты.Добавить();
			СтрокаДистрибутива.Идентификатор = ВариантСборки.ПолучитьИдентификатор();
			СтрокаДистрибутива.Архитектура = НайденныйФайл.Архитектура;
			СтрокаДистрибутива.ВидДистрибутива = НайденныйФайл.ВидДистрибутива;
			СтрокаДистрибутива.ИмяФайла = Файл.Имя;
			СтрокаДистрибутива.ДатаФайла = Формат(Файл.ПолучитьВремяИзменения(), "ДЛФ=Д");
			СтрокаДистрибутива.Ссылка = "/downloads/" + ОбъединитьПути(мТокенВерсии, НайденныйФайл.Подкаталог, Файл.Имя);
			#Если Windows Тогда
				СтрокаДистрибутива.Ссылка = СтрЗаменить(СтрокаДистрибутива.Ссылка, "\", "/");
			#КонецЕсли
			СтрокаДистрибутива.Файл = НайденныйФайл.Файл;
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

Функция ТаблицаФайлов()
	Варианты = Новый ТаблицаЗначений();
	Варианты.Колонки.Добавить("ИмяФайла");
	Варианты.Колонки.Добавить("Идентификатор");
	Варианты.Колонки.Добавить("Архитектура");
	Варианты.Колонки.Добавить("ВидДистрибутива");
	Варианты.Колонки.Добавить("ДатаФайла");
	Варианты.Колонки.Добавить("Ссылка");
	Варианты.Колонки.Добавить("Файл");

	Возврат Варианты;
КонецФункции